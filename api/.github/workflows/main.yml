name: CI

on:
  push:
    branches: 
      - main

permissions: 
  id-token: write
  contents: read

jobs:
  build:
    name: 'build and push'
    runs-on: ubuntu-latest
    # strategy:
    #  matrix:
    #    node: [ 16, 18, 20]
    
    steps:
      - uses: actions/checkout@v4

      # - name: Setup node | ${{matrix.node}}
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          # node-version: ${{matrix.node}}
          node-version: 18
          cache: 'npm'
      - run: npm i
      - run: npm run test 

      - name: Generate tag
        id: generate_tag
        run: |
          SHA=$(echo $GITHUB_SHA | head -c7)
          echo "sha=$SHA" >> $GITHUB_OUTPUT

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{secrets.AWS_LOGIN_ROLE}}
          aws-region: ${{secrets.AWS_REGION}} 

      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2    

      # - name: Login to Docker Hub
      #  uses: docker/login-action@v3
      #  with:
      #    username: ${{ secrets.DOCKERHUB_USERNAME }}
      #    password: ${{ secrets.DOCKERHUB_TOKEN }}  
          
      # - name: Build and Push
      #  uses: docker/build-push-action@v5
      #  with:
      #    push: true
      #    tags: hugocoutinho96/projeto-ci-api:${{ steps.generate_tag.outputs.sha}}, hugocoutinho96/projeto-ci-api:latest    

      - name: DEBUG | echo ordem
        run: echo "ðŸš€ Rodando apÃ³s login e configure-aws"

      - name: Build docker image
        id: build-docker-image
        env: 
          REGISTRY: ${{steps.login-ecr.outputs.registry}}
          TAG: ${{steps.generate_tag.outputs.sha}}
        run: |
          docker build -t $REGISTRY/projeto-ci:$TAG .
          docker push $REGISTRY/projeto-ci:$TAG
          IMAGE=$(echo $REGISTRY/projeto-ci:$TAG)
          echo "image=$IMAGE" >> $GITHUB_OUTPUT

      - name: Deploy to App Runner
        uses: awslabs/amazon-app-runner-deploy@main
        with:
          service: ${{vars.SERVICE_NAME}}
          image: ${{steps.build-docker-image.outputs.image}}
          access-role-arn: ${{secrets.AWS_APP_RUNNER_ROLE}}
          region: ${{secrets.AWS_REGION}} 
          cpu: 2
          memory: 4
          port: 3000    

      # - name: Push image
      #  run: docker push hugocoutinho96/projeto-ci-api:${{ steps.generate_tag.outputs.sha}}  
